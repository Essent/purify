{"version":3,"sources":["webpack:///component---src-pages-getting-started-js-888e1e6ccd1d3fa19bbe.js","webpack:///./src/pages/getting-started.js"],"names":["webpackJsonp","226","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_styledComponents","_styledComponents2","Container","styled","div","withConfig","displayName","Console","GettingStarted","createElement","href"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAYA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAAqBP,EAAuBM,GCZ3CE,EAAYC,UAAOC,IAAnBC,YAAAC,YAAA,qGAQAC,EAAUJ,UAAOC,IAAjBC,YAAAC,YAAA,oHAQAE,EAAiB,iBACnBT,GAAAF,QAAAY,cAACP,EAAD,KACIH,EAAAF,QAAAY,cAAA,qBAAYV,EAAAF,QAAAY,cAAA,iBAAZ,KACAV,EAAAF,QAAAY,cAAA,iBAFJ,oMAIeV,EAAAF,QAAAY,cAAA,KAAGC,KAAK,+CAAR,gBAJf,eAKIX,EAAAF,QAAAY,cAAA,yBACAV,EAAAF,QAAAY,cAAA,UACIV,EAAAF,QAAAY,cAAA,UACIV,EAAAF,QAAAY,cAAA,+CADJ,MACgDV,EAAAF,QAAAY,cAAA,iBADhD,kEAEIV,EAAAF,QAAAY,cAAA,iBAFJ,4LAKAV,EAAAF,QAAAY,cAAA,UACIV,EAAAF,QAAAY,cAAA,wBADJ,YAC+BV,EAAAF,QAAAY,cAAA,iBAD/B,sKAEoEV,EAAAF,QAAAY,cAAA,iBAFpE,0HAKAV,EAAAF,QAAAY,cAAA,UACIV,EAAAF,QAAAY,cAAA,uCADJ,gLAEkFV,EAAAF,QAAAY,cAAA,iBAFlF,6RAOJV,EAAAF,QAAAY,cAAA,2BACAV,EAAAF,QAAAY,cAAA,iBAzBJ,+FA0BIV,EAAAF,QAAAY,cAACF,EAAD,8BAC0BR,EAAAF,QAAAY,cAAA,WAD1B,sBA1BJ,2CA8B4CV,EAAAF,QAAAY,cAAA,iBA9B5C,qEA8ByHV,EAAAF,QAAAY,cAAA,WA9BzH,4CA+B6CV,EAAAF,QAAAY,cAAA,KAAGC,KAAK,eAAR,SA/B7C,yCD2IHlB,GAAQK,QCzGMW,ED0GdjB,EAAOC,QAAUA,EAAiB","file":"component---src-pages-getting-started-js-888e1e6ccd1d3fa19bbe.js","sourcesContent":["webpackJsonp([22003566706915],{\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _styledComponents = __webpack_require__(20);\n\t\n\tvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Container = _styledComponents2.default.div.withConfig({\n\t    displayName: 'getting-started__Container'\n\t})(['width:50%;@media only screen and (max-width:1024px){width:100%;}']);\n\t\n\tvar Console = _styledComponents2.default.div.withConfig({\n\t    displayName: 'getting-started__Console'\n\t})(['background-color:#283646;padding:5px;color:white;margin:10px 0;border-radius:4px;']);\n\t\n\tvar GettingStarted = function GettingStarted() {\n\t    return _react2.default.createElement(\n\t        Container,\n\t        null,\n\t        _react2.default.createElement(\n\t            'h1',\n\t            null,\n\t            'What is ',\n\t            _react2.default.createElement(\n\t                'i',\n\t                null,\n\t                'pure'\n\t            ),\n\t            '?'\n\t        ),\n\t        _react2.default.createElement(\n\t            'i',\n\t            null,\n\t            'Pure'\n\t        ),\n\t        ' is a library for functional programming in TypeScript. It\\'s purpose is to allow developers to use popular patterns and abstractions that are available in most functional languages. It is also ',\n\t        _react2.default.createElement(\n\t            'a',\n\t            { href: 'https://github.com/fantasyland/fantasy-land' },\n\t            'Fantasy Land'\n\t        ),\n\t        ' conformant.',\n\t        _react2.default.createElement(\n\t            'h1',\n\t            null,\n\t            'Core values'\n\t        ),\n\t        _react2.default.createElement(\n\t            'ul',\n\t            null,\n\t            _react2.default.createElement(\n\t                'li',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'b',\n\t                    null,\n\t                    'Elegant and developer-friendly API'\n\t                ),\n\t                ' - ',\n\t                _react2.default.createElement(\n\t                    'i',\n\t                    null,\n\t                    'pure'\n\t                ),\n\t                '\\'s design decisions are made with developer experience in mind.',\n\t                _react2.default.createElement(\n\t                    'i',\n\t                    null,\n\t                    'Pure'\n\t                ),\n\t                ' doesn\\'t try to change how you write TypeScript, instead it provides useful tools for making your code easier to read and maintain without resolving to hacks or scary type definitions.'\n\t            ),\n\t            _react2.default.createElement(\n\t                'li',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'b',\n\t                    null,\n\t                    'Type-safety'\n\t                ),\n\t                ' - While ',\n\t                _react2.default.createElement(\n\t                    'i',\n\t                    null,\n\t                    'pure'\n\t                ),\n\t                ' can be used in vanilla JavaScript, it\\'s entirely written with TypeScript and type safety in mind. While TypeScript does a great job at preventing runtime errors, ',\n\t                _react2.default.createElement(\n\t                    'i',\n\t                    null,\n\t                    'pure'\n\t                ),\n\t                ' goes a step further and provides utility functions for working with native objects like arrays in a type-safe manner.'\n\t            ),\n\t            _react2.default.createElement(\n\t                'li',\n\t                null,\n\t                _react2.default.createElement(\n\t                    'b',\n\t                    null,\n\t                    'Emphasis on practical code'\n\t                ),\n\t                ' - Higher-kinded types and other type-level features would be great additions to this library, but as of right now they don\\'t have reasonable implementations in TypeScript. ',\n\t                _react2.default.createElement(\n\t                    'i',\n\t                    null,\n\t                    'Pure'\n\t                ),\n\t                ' focuses on being a library that you can include in any TypeScript project and favors instance methods instead of functions, clean and readable type definitions instead of advanced type features and a curated API instead of trying to port over another language\\'s standard library.'\n\t            )\n\t        ),\n\t        _react2.default.createElement(\n\t            'h1',\n\t            null,\n\t            'How to start?'\n\t        ),\n\t        _react2.default.createElement(\n\t            'i',\n\t            null,\n\t            'Pure'\n\t        ),\n\t        ' is available as a package on npm. You can install it with a package manager of your choice:',\n\t        _react2.default.createElement(\n\t            Console,\n\t            null,\n\t            '$ npm install pure-ts ',\n\t            _react2.default.createElement('br', null),\n\t            '$ yarn add pure-ts'\n\t        ),\n\t        'On the left sidebar you can find all of ',\n\t        _react2.default.createElement(\n\t            'i',\n\t            null,\n\t            'pure'\n\t        ),\n\t        '\\'s contents, each page contains a guide on how to start using it. ',\n\t        _react2.default.createElement('br', null),\n\t        'You can start by visiting the page about ',\n\t        _react2.default.createElement(\n\t            'a',\n\t            { href: '/adts/Maybe' },\n\t            'Maybe'\n\t        ),\n\t        ', one of the most popular data types.'\n\t    );\n\t};\n\t\n\texports.default = GettingStarted;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-getting-started-js-888e1e6ccd1d3fa19bbe.js","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    width: 50%;\r\n\r\n    @media only screen and (max-width : 1024px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Console = styled.div`\r\n    background-color: #283646;\r\n    padding: 5px;\r\n    color: white;\r\n    margin: 10px 0;\r\n    border-radius: 4px;\r\n`\r\n\r\nconst GettingStarted = () =>\r\n    <Container>\r\n        <h1>What is <i>pure</i>?</h1>\r\n        <i>Pure</i> is a library for functional programming in TypeScript.\r\n        It's purpose is to allow developers to use popular patterns and abstractions that are available in most functional languages.\r\n        It is also <a href=\"https://github.com/fantasyland/fantasy-land\">Fantasy Land</a> conformant.\r\n        <h1>Core values</h1>\r\n        <ul>\r\n            <li>\r\n                <b>Elegant and developer-friendly API</b> - <i>pure</i>'s design decisions are made with developer experience in mind.\r\n                <i>Pure</i> doesn't try to change how you write TypeScript, instead it provides useful tools for making your code easier to\r\n                read and maintain without resolving to hacks or scary type definitions.  \r\n            </li>\r\n            <li>\r\n                <b>Type-safety</b> - While <i>pure</i> can be used in vanilla JavaScript, it's entirely written with TypeScript and type safety in mind.\r\n                While TypeScript does a great job at preventing runtime errors, <i>pure</i> goes a step further and provides utility functions for working\r\n                with native objects like arrays in a type-safe manner.\r\n            </li>\r\n            <li>\r\n                <b>Emphasis on practical code</b> - Higher-kinded types and other type-level features would be great additions to this library,\r\n                but as of right now they don't have reasonable implementations in TypeScript. <i>Pure</i> focuses on being a library that you can\r\n                include in any TypeScript project and favors instance methods instead of functions, clean and readable type definitions instead of\r\n                advanced type features and a curated API instead of trying to port over another language's standard library.\r\n            </li>\r\n        </ul>\r\n        <h1>How to start?</h1>\r\n        <i>Pure</i> is available as a package on npm. You can install it with a package manager of your choice:\r\n        <Console>\r\n            $ npm install pure-ts <br />\r\n            $ yarn add pure-ts\r\n        </Console>\r\n        On the left sidebar you can find all of <i>pure</i>'s contents, each page contains a guide on how to start using it. <br />\r\n        You can start by visiting the page about <a href=\"/adts/Maybe\">Maybe</a>, one of the most popular data types.\r\n    </Container>\r\n\r\nexport default GettingStarted\n\n\n// WEBPACK FOOTER //\n// ./src/pages/getting-started.js"],"sourceRoot":""}